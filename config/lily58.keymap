/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3            &kp N4        &kp N5                                    &kp N6         &kp N7         &kp N8             &kp N9   &kp N0    &tog 3
&kp ESC    &kp Q   &kp W   &kp E             &kp R         &kp T                                     &kp Y          &kp U          &kp I              &kp O    &kp P     &kp BACKSPACE
&kp TAB    &kp A   &kp S   &kp D             &kp F         &kp G                                     &kp H          &kp J          &kp K              &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X   &kp C             &kp V         &kp B         &kp LBKT       &kp RBKT     &kp N          &kp M          &kp COMMA          &kp DOT  &kp FSLH  &kp RSHFT
                           &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_GUI  &lt 1 SPACE    &lt 1 ENTER  &kp RIGHT_GUI  &kp RIGHT_ALT  &kp RIGHT_CONTROL
            >;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&kp F1  &kp F2     &kp F3     &kp F4    &kp F5      &kp F6                                    &kp F7     &kp F8    &kp F9     &kp F10    &kp F11        &kp F12
&trans  &kp N1     &kp N2     &kp N3    &kp N4      &kp N5                                    &kp N6     &kp N7    &kp N8     &kp N9     &kp N0         &trans
&trans  &kp EXCL   &kp AT     &kp HASH  &kp DOLLAR  &kp PRCNT                                 &kp CARET  &kp AMPS  &kp ASTRK  &kp LPAR   &kp RPAR       &trans
&trans  &kp EQUAL  &kp MINUS  &kp PLUS  &kp LBRC    &kp RBRC   &kp LC(LEFT)    &kp RC(RIGHT)  &kp LBKT   &kp RBKT  &kp SEMI   &kp COLON  &kp BACKSLASH  &trans
                              &trans    &trans      &trans     &mo 2           &mo 2          &trans     &trans    &trans
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans    &trans    &trans          &kp K_MUTE  &kp K_VOLUME_DOWN  &kp K_VOLUME_UP                    &trans           &kp KP_NUMLOCK   &kp KP_SLASH     &kp KP_MULTIPLY  &kp KP_MINUS  &trans
&trans    &trans    &kp UP_ARROW    &trans      &trans             &trans                             &kp PAGE_UP      &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_PLUS   &kp BACKSPACE
&kp CAPS  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT   &trans             &trans                             &kp PAGE_DOWN    &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_ENTER  &kp DEL
&trans    &trans    &trans          &trans      &trans             &trans           &trans    &trans  &trans           &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_ENTER  &trans
                                    &trans      &trans             &trans           &trans    &trans  &kp KP_NUMBER_0  &kp KP_NUMBER_0  &kp KP_DOT
            >;
        };

        ADJUST_LAYER {
            bindings = <
&trans       &trans  &trans  &rgb_ug RGB_TOG  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI                    &trans  &trans  &trans  &kp RC(RA(END))  &kp RC(RA(DEL))  &tog 3
&bootloader  &trans  &trans  &trans           &trans           &trans                             &trans  &trans  &trans  &trans           &trans           &trans
&trans       &trans  &trans  &trans           &trans           &trans                             &trans  &trans  &trans  &trans           &trans           &trans
&trans       &trans  &trans  &trans           &trans           &trans           &trans    &trans  &trans  &trans  &trans  &trans           &trans           &kp RC(RS(END))
                             &trans           &trans           &trans           &trans    &trans  &trans  &trans  &trans
            >;
        };
    };
};
